plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.hugo83'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// 기본 의존성
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'

	// 스프링부트 시큐리티 의존성
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

	// DB연동용 의존성
	runtimeOnly 'com.mysql:mysql-connector-j'  // MySQL 연동을 위한 의존성
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Spring DATA JPA Querydsl
	// implementation 'com.querydsl:querydsl-jpa:5.1.0'
	// annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jpa'
	// annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	// implementation 'jakarta.persistence:jakarta.persistence-api'  // javax

	// Thymeleaf layout 의존성 추가
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

	// DTO ↔ Entity 간 변환(매핑) 도와주는 라이브러리
	implementation 'org.modelmapper:modelmapper:3.2.4'

	// 테스트
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

def generated = "$buildDir/generated/sources/annotationProcessor/java/main"

sourceSets {
    main {
        java {
            srcDirs += [generated]
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}
// clean {
//     delete file(querydslDir)
// }

tasks.named('test') {
	useJUnitPlatform()
}

// 테스트 태스크 비활성화 (개발 중)
tasks.named('test') {
    enabled = false
}

// 디버깅 콘솔 한글깨짐 해결 - 제대로 안됨
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test).configureEach {
    systemProperty 'file.encoding', 'UTF-8'
    jvmArgs '-Dfile.encoding=UTF-8'
}